#include <iostream>
#include <vector>

#include <SFML/Window.hpp>
#include <SFML/Graphics.hpp>


class CustomSprite : public sf::Sprite
 {
  public:

    void setBounds(int left, int right, int top, int bottom)
     {
      bound_top = top;
      bound_bottom = bottom;
      bound_right = right;
      bound_left = left;
     }


    bool Collision_T(sf::FloatRect wall_bounds, sf::FloatRect guy_bounds)
     {
      if ((guy_bounds.top+guy_bounds.height >= wall_bounds.top-3) && (guy_bounds.top < wall_bounds.top)
      && (guy_bounds.left+guy_bounds.width > wall_bounds.left+3) && (guy_bounds.left < wall_bounds.left+wall_bounds.width-3))
       {
        return 1;
       }
      else{return 0;}

     }

    // add other collison checking sides here


    void moveInDirection(const sf::Time &elapsed, const std::vector<sf::Sprite> &obstacles)
     {


      bool top=0, left=0, bottom=0, right=0;
      for(auto &obstacle : obstacles)
      {
      sf::FloatRect guy_bounds = getGlobalBounds();
      sf::FloatRect wall_bounds = obstacle.getGlobalBounds();
       if(Collision_T(wall_bounds, guy_bounds) == 1){top = 1;}
//       if(Collision_L(wall_bounds, guy_bounds) == 1){left = 1;}
//       if(Collision_B(wall_bounds, guy_bounds) == 1){bottom = 1;}
//       if(Collision_R(wall_bounds, guy_bounds) == 1){right = 1;}
      }


      sf::FloatRect rectangle_bounds = getGlobalBounds();
      if(sf::Keyboard::isKeyPressed(sf::Keyboard::Up) && rectangle_bounds.top > bound_top && bottom != true)
       {
        move(0, 0);
       }


     }


  private:
    int m_speed_x = 200;
    int m_speed_y = 200;
    int bound_top = 0;
    int bound_bottom = 0;
    int bound_left = 0;
    int bound_right = 0;
 };

int main()
{

    sf::RenderWindow window(sf::VideoMode(800, 600), "My window");
    sf::Clock clock;

    sf::Texture guy_tex;

    sf::Texture grass_tex;

    sf::Texture wall_tex;

    CustomSprite guy;

    sf::Sprite grass;


    std::vector<sf::Sprite> walls;

    sf::Sprite wall1;

    sf::Sprite wall2;

    sf::Sprite wall3;

    sf::Sprite wall4;

    sf::Sprite wall5;

    sf::Sprite wall6;




    while (window.isOpen())
     {
      sf::Time elapsed = clock.restart();

      sf::Event event;
      while (window.pollEvent(event))
       {
        if (event.type == sf::Event::Closed)
         {
          window.close();
         }
       }

      guy.setBounds(0, window.getSize().x, 0, window.getSize().y);
      guy.moveInDirection(elapsed, walls);

      window.clear(sf::Color::Black);
      window.draw(grass);
      window.draw(guy);

      for (auto &wall : walls){
           window.draw(wall);
      }

      window.display();
     }

    return 0;
}
